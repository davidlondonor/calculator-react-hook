{"version":3,"sources":["components/Button/index.js","components/app/index.js","index.js"],"names":["Button","content","onButtonClick","type","className","onClick","App","useState","value","setValue","memory","setMemory","operator","setOperator","Date","time","setTime","useEffect","getMinutes","handleButtonPress","numberPress","parseFloat","toString","length","includes","getHours","padStart","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df157c7e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Button.css\";\n\nconst Button = ({ content, onButtonClick, type }) => {\n  return (\n    <>\n      <div\n        className={`Button ${content === \"0\" ? \"zero\" : \"\"} ${type || \"\"}`}\n        onClick={onButtonClick(content)}\n      >\n        {content}\n      </div>\n    </>\n  );\n};\n\nexport default Button;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Buttom from \"../Button/index\";\n\nconst App = () => {\n  const [value, setValue] = useState(\"0\");\n  const [memory, setMemory] = useState(null);\n  const [operator, setOperator] = useState(null);\n  const [time, setTime] = useState(new Date());\n\n  useEffect(() => {\n    setTime(new Date());\n  }, [new Date().getMinutes()]);\n\n  const handleButtonPress = (content) => () => {\n    const numberPress = parseFloat(value);\n\n    if (content === \"AC\") {\n      setValue(\"0\");\n      setMemory(null);\n      setOperator(null);\n      return;\n    }\n\n    if (content === \"±\") {\n      setValue((numberPress * -1).toString());\n      // setOperator(null);\n      return;\n    }\n    if (content === \"%\") {\n      setValue((numberPress / 100).toString());\n      setMemory(null);\n      setOperator(null);\n      return;\n    }\n\n    if (content === \".\") {\n      if (value.includes(\".\")) return;\n      setValue(value + \".\");\n      return;\n    }\n\n    if (content === \"+\") {\n      if (operator === null) {\n        if (operator === \"+\") {\n          setMemory(memory + parseFloat(value));\n        } else if (operator === \"−\") {\n          setMemory(memory - parseFloat(value));\n        } else if (operator === \"×\") {\n          setMemory(memory * parseFloat(value));\n        } else if (operator === \"÷\") {\n          setMemory(memory / parseFloat(value));\n        }\n      } else {\n        setMemory(parseFloat(value));\n      }\n      setValue(\"0\");\n      setOperator(\"+\");\n      return;\n    }\n\n    if (content === \"−\") {\n      if (operator === null) {\n        if (operator === \"+\") {\n          setMemory(memory + parseFloat(value));\n        } else if (operator === \"−\") {\n          setMemory(memory - parseFloat(value));\n        } else if (operator === \"×\") {\n          setMemory(memory * parseFloat(value));\n        } else if (operator === \"÷\") {\n          setMemory(memory / parseFloat(value));\n        }\n      } else {\n        setMemory(parseFloat(value));\n      }\n      setValue(\"0\");\n      setOperator(\"−\");\n      return;\n    }\n    if (content === \"×\") {\n      if (operator === null) {\n        if (operator === \"+\") {\n          setMemory(memory + parseFloat(value));\n        } else if (operator === \"−\") {\n          setMemory(memory - parseFloat(value));\n        } else if (operator === \"×\") {\n          setMemory(memory * parseFloat(value));\n        } else if (operator === \"÷\") {\n          setMemory(memory / parseFloat(value));\n        }\n      } else {\n        setMemory(parseFloat(value));\n      }\n      setValue(\"0\");\n      setOperator(\"×\");\n      return;\n    }\n    if (content === \"÷\") {\n      if (operator === null) {\n        if (operator === \"+\") {\n          setMemory(memory + parseFloat(value));\n        } else if (operator === \"−\") {\n          setMemory(memory - parseFloat(value));\n        } else if (operator === \"×\") {\n          setMemory(memory * parseFloat(value));\n        } else if (operator === \"÷\") {\n          setMemory(memory / parseFloat(value));\n        }\n      } else {\n        setMemory(parseFloat(value));\n      }\n      setValue(\"0\");\n      setOperator(\"÷\");\n      return;\n    }\n\n    if (content === \"=\") {\n      if (!operator) return;\n      if (operator === \"+\") {\n        setValue(memory + parseFloat(value).toString());\n      } else if (operator === \"−\") {\n        setValue(memory - parseFloat(value).toString());\n      } else if (operator === \"×\") {\n        setValue(memory * parseFloat(value).toString());\n      } else if (operator === \"÷\") {\n        setValue(memory / parseFloat(value).toString());\n      }\n      setMemory(null);\n      setOperator(null);\n      return;\n    }\n\n    if (value[value.length - 1] === \".\") {\n      setValue(value + content);\n    } else {\n      setValue(parseFloat(numberPress + content).toString());\n    }\n  };\n  return (\n    <>\n      <div className=\"App\">\n        <div className=\"top\">\n          <div className=\"time\">\n            {time.getHours().toString().padStart(2, \"0\")}:\n            {time.getMinutes().toString().padStart(2, \"0\")}\n          </div>\n          <div className=\"menu\">\n            <p>Calculadora con Hooks y useState</p>\n          </div>\n        </div>\n        <div className=\"display\">{value}</div>\n        <div className=\"buttons\">\n          <Buttom\n            onButtonClick={handleButtonPress}\n            content=\"AC\"\n            type=\"function\"\n          />\n          <Buttom\n            onButtonClick={handleButtonPress}\n            content=\"±\"\n            type=\"function\"\n          />\n          <Buttom\n            onButtonClick={handleButtonPress}\n            content=\"%\"\n            type=\"function\"\n          />\n          <Buttom\n            onButtonClick={handleButtonPress}\n            content=\"∕\"\n            type=\"operator\"\n          />\n          <Buttom onButtonClick={handleButtonPress} content=\"7\" />\n          <Buttom onButtonClick={handleButtonPress} content=\"8\" />\n          <Buttom onButtonClick={handleButtonPress} content=\"9\" />\n          <Buttom\n            onButtonClick={handleButtonPress}\n            content=\"×\"\n            type=\"operator\"\n          />\n          <Buttom onButtonClick={handleButtonPress} content=\"4\" />\n          <Buttom onButtonClick={handleButtonPress} content=\"5\" />\n          <Buttom onButtonClick={handleButtonPress} content=\"6\" />\n          <Buttom\n            onButtonClick={handleButtonPress}\n            content=\"−\"\n            type=\"operator\"\n          />\n          <Buttom onButtonClick={handleButtonPress} content=\"1\" />\n          <Buttom onButtonClick={handleButtonPress} content=\"2\" />\n          <Buttom onButtonClick={handleButtonPress} content=\"3\" />\n          <Buttom\n            onButtonClick={handleButtonPress}\n            content=\"+\"\n            type=\"operator\"\n          />\n          <Buttom onButtonClick={handleButtonPress} content=\"0\" />\n          <Buttom onButtonClick={handleButtonPress} content=\".\" />\n          <Buttom\n            onButtonClick={handleButtonPress}\n            content=\"=\"\n            type=\"operator\"\n          />\n        </div>\n        <div className=\"buttom\" />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app/index\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}